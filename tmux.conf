# =====================================
# ===       General settings        ===
# =====================================
set -g default-terminal "screen-256color"
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a

# Set parent terminal title to reflect current window in tmux session 
set -g set-titles on
set -g set-titles-string "#I:#W"

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on

# =====================================
# ===        Key bindings           ===
# =====================================

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Reload tmux configuration 
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# New window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes using h and v and retain cwd
bind h split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

# Pane resizing
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Select pane and windows
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
bind \ if '[ #{pane_index} -eq 1 ]' \
     'swap-pane -s "!"' \
     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)

bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"
# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Zoom pane
bind + resize-pane -Z

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# Clear both screen and history
bind C-k send-keys -R \; send-keys C-l \; run 'sleep 0.1' \; clear-history

# ==================================================
# ===             Window monitoring              ===
# ==================================================
bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'
# Activity bell and whistles
set -g visual-activity on

# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
set -g @copy_use_osc52_fallback on

# Prefer vi style key table
setw -g mode-keys vi

bind p paste-buffer
bind C-p choose-buffer

# trigger copy mode by
bind -n M-Up copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "1" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 1 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 1 scroll-down

yank="sh ~/.tmux/yank.sh"

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
   send-keys -X clear-selection
    
# iTerm2 works with clipboard out of the box, set-clipboard already set to "external"
# tmux show-options -g -s set-clipboard
# set-clipboard on|external

# =====================================
# ===           Theme               ===
# =====================================
color_black="#202020"
color_white="#abb2bf"
color_red="#e06c75"
color_green="#98c379"
color_blue="#61afef"
color_yellow="#e5c07b"
color_orange="colour166"
color_purple="colour134"
color_light_grey="colour254"
color_medium_grey="colour245"
color_dark_grey="colour238"

# =====================================
# ===    Appearence and status bar  ===
# =====================================
# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

set -g mode-style "fg=default,bg=$color_green"

# command line style
set -g message-style "fg=$color_green,bg=$color_black"

# status line style
set -g status-style "fg=$color_white,bg=$color_black"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_white,bold,bg=$color_orange"
setw -g window-status-current-format "#[fg=$color_black,bg=$color_orange]$separator_powerline_right #I:#W #[fg=$color_orange,bg=$color_black]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_green"

# outline for active pane
setw -g pane-active-border-style "fg=$color_orange"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100

# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default]'

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$color_green"
set -g @sysstat_cpu_color_medium "$color_yellow"
set -g @sysstat_cpu_color_stress "$color_red"

set -g @sysstat_mem_color_low "$color_green"
set -g @sysstat_mem_color_medium "$color_yellow"
set -g @sysstat_mem_color_stress "$color_red"

# Configure tmux-battery widget colors
set -g @batt_color_full_charge "#[fg=$color_green]"
set -g @batt_color_high_charge "#[fg=$color_green]"
set -g @batt_color_medium_charge "#[fg=$color_yellow]"
set -g @batt_color_low_charge "#[fg=$color_red]"

# Online and Offline settings for tmux-online-status
set -g @online_icon "#[fg=$color_green]●#[default]"
set -g @offline_icon "#[fg=$color_red]●#[default]"

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_black"
set -g @prefix_highlight_bg "$color_blue"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_black,bg=$color_blue"

# Define widgets we're going to use in status bar
wg_session="#[fg=$color_white] #S #[default]"

wg_prefix="#{prefix_highlight}"
wg_stats="#{sysstat_cpu} | #{sysstat_mem}"
wg_battery="#{battery_status_fg}#{battery_icon}#{battery_percentage}#[fg=$color_white]"
wg_date="#[fg=$color_purple]%h %d %l:%M %p#[default]"
wg_online="#{online_status}"

set -g status-left "$wg_session"
set -g status-right "$wg_prefix  $wg_stats | $wg_date $wg_battery $wg_online "

# =====================================
# ===        Renew environment      ===
# =====================================
set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind '$' run "sh ~/.tmux/renew_env.sh"

# =====================================
# ===          Plugins              ===
# =====================================

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'bimal1988/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'

# Plugin properties
set -g @sidebar-tree 't'
set -g @sidebar-tree-focus 'T'
set -g @sidebar-tree-command 'tree -C'

set -g @open-S 'https://www.google.com/search?q='

# ==============================================
# ===   Nesting local and remote sessions    ===
# ==============================================
# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_medium_grey,bg=$color_dark_grey" \;\
    set window-status-current-format "#[fg=$color_dark_grey,bg=$color_light_grey]$separator_powerline_right#[default] #I:#W# #[fg=$color_light_grey,bg=$color_dark_grey]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_black,bold,bg=$color_light_grey" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
    set -u prefix \;\
    set -u key-table \;\
    set -u status-style \;\
    set -u window-status-current-style \;\
    set -u window-status-current-format \;\
    refresh-client -S

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
